text = """
                                               A U       K     C   I         L   Q           W                                         
                                               V H       F     D   F         Z   S           E                                         
  #############################################.#.#######.#####.###.#########.###.###########.#######################################  
  #...#.#.........#.#.......#...#.#.....#.....#.#.....#.........#.......#...#.#.#.....#.#.#.....#...#...#.#.#...........#.....#.#.#.#  
  ###.#.#####.#.###.#######.###.#.###.#####.#.#.#####.#######.###.#########.#.#.#.#####.#.###.###.#.###.#.#.###.#.#.###.#.#####.#.#.#  
  #.#...#.#.#.#.#.........#.................#.....#.#.......#...#...#.......#...#...#.#.#.........#.............#.#.#.#.#...#.......#  
  #.#.###.#.#.#######.###.#.###.###.#.###.#.#.#.###.###.#####.###.#########.###.#.###.#.#####.#######.###.###.#######.###.###.#######  
  #...#.......#.......#.....#.....#.#.#.#.#.#.#.#.....#...#.....#...#.#.........#.....#...#.#.....#.#.#.#...#...#.....#.....#.......#  
  ###.#######.###########.###.#.#######.#.#######.###.#.#######.#.###.###.#########.###.###.#.#####.###.#.###.#####.###.#.###.#.#####  
  #...........#.#.#.........#.#...#...#...#.......#.....#.......#.#...#.#.....#.....#.......#.......#.#...#.............#.....#.....#  
  #.#.#######.#.#.#.#.#####.#######.#####.#####.#.#########.#.#.#.#.#.#.#.#.#.###.#.#####.#.#.#######.###.#####.#####.#.#############  
  #.#.#.#.#.........#.#.......#...#...........#.#.#...#.....#.#.#...#...#.#.#...#.#.#.....#.............#.....#.....#.#.#.#.......#.#  
  #####.#.###.#####.#############.###.###.#######.#.#.###.#####.#######.#####.#.#.###.#.#.#.#.#####.#####.#.###.#####.#.#.#####.###.#  
  #.........#.#.#...#...#.#.#...#.#.#.#.....#.......#...#.....#.#.........#.#.#.#...#.#.#.#.#.#.#...#.#...#.#.......#.#...#.....#...#  
  #######.#####.#.#.###.#.#.#.#.#.#.#####.###.###.###.#.#.#######.#######.#.###.###.###.#######.###.#.#####.###.#.#######.#####.###.#  
  #.#.......#...#.#.#.......#.#.#...........#.#.#...#.#.#...#.......#.#.#.#.#...#...#...#.........#.#...#.....#.#.#.#.#.#.#.#...#...#  
  #.#.#.#.#####.#########.#####.#####.#.#.#####.#.#####.#.###.###.###.#.###.#.###.#####.#.###########.#####.#######.#.#.###.#.###.###  
  #...#.#.#...#.....#.#.....#...#.#...#.#...#.....#.....#.#.....#.........#.....#.....#...#.............#.#.#.#.#.#...#.#.#.....#.#.#  
  #######.###.#.#####.#.#.#.###.#.#####.###.###.#.#####.#.#######.#.#.#.#####.#.#.#.#.#.#.#.###.###.#.#.#.###.#.#.#.###.#.###.###.#.#  
  #.#...................#.#.........#...#.#...#.#...#...#.....#...#.#.#...#...#.#.#.#.#.#.#.#.....#.#.#.......#.#...#.#.#...#.......#  
  #.#.###.#####.#.#.###########.#.###.###.#.#####.#.###.#.#########.###.#######.#.#.###.###.###.###########.###.#.###.#.#.###.#.#.###  
  #...#.#.#.....#.#.#...#.#.....#.#.#.#.#.......#.#.#.#.#.....#.#...#.....#...#.#.#.#.....#...#.#.#.#.#.#...#.#.....#.#.#...#.#.#.#.#  
  #####.#.###.#.#####.#.#.#######.#.###.#.#.###.#####.#.#####.#.#######.###.###.#.#####.###.#####.#.#.#.#####.#.###.#.#.#.###.#####.#  
  #.......#.#.#.#.#.#.#.#...#.............#.#...#.....#.#.........#.......#.....#.....#...........#.#.#.......#.#.#.......#.#.......#  
  #########.#####.#.###.###.###.#.#.#####.#######.#####.#.#####.#######.#####.#.#.#######.#.###.###.#.#.#########.#######.#.###.#####  
  #.....#...#...#...#...#.#...#.#.#.#.#.....#.........#.#...#.#.#...#.#.#.#...#.#.#.......#...#.............#...#.#.........#.#.....#  
  #.#.#####.###.#.###.###.###.#.#.###.#####.###.#.###.#.###.#.#####.#.#.#.#####.#.#####.#.#.#.#.###.#.#########.#.###.#.#.###.#.#####  
  #.#...#.....#.#.........#.....#.#...........#.#.#...#.#...........#...#.......#.#.....#.#.#.#.#.#.#.....#.#...#...#.#.#.......#.#.#  
  ###.#####.#.#.#####.#.#.###.###.###.#.#.###.###.#.###.#.#####.#######.#.#####.#.#####.#.#####.#.#####.###.###.#.#####.###.#.###.#.#  
  #.......#.#.#.#...#.#.#.#.....#.#...#.#.#...#...#.#...#.#...#.#.....#.#.....#.#.....#.#.#...#...#.#.#...#.#.........#.#.#.#.....#.#  
  ###.#######.#.###.#####.###.#########.#.#######.#.#.###.#.#.###.###.#.#.###.###.#####.###.###.###.#.#####.#.#####.#####.#####.###.#  
  #.#...#.#.....#.....#.....#.#.........#.....#...#.#...#...#.#...#.#.#.#.#.....#...#.........#.#.#.#...#...#.#.#.#.#.#.#...........#  
  #.#.###.###.#.#####.###.#############.#.#.#####.#.###.###.#####.#.#.#.#######.#.#######.#.#####.#.#.#####.###.#.#.#.#.###.###.#####  
  #...#.#.#...#...#.#.#.#.......#.....#.#.#.#.....#.#...#.......#.#.#.....#.#...#.#.......#.#...#.#...#.#.#...#.#.#...#.#.#.#.......#  
  ###.#.#.#.#######.#.#.###.#######.#####.#####.#.#.#.#.#.#######.#########.#.#.#.#####.#####.###.#.###.#.#.###.#.#.###.#.###.#.#####  
  #...#.....#.#.#...#...#.#.#.#.#...........#...#.#...#.#.......#...#.........#.#.....#.........#.......#.#...#...#...#...#.#.#.....#  
  #.#.#####.#.#.###.#.###.#.#.#.#.#######.#######.#########.#.###.#######.###########.#######.#####.#.###.#.#####.#.#####.#.###.#####  
  #.#...#...#.#.#.....#.......#.#...#    E       S         Z J   C       A           R       X    #.#...#...#.......#.#.#.#.#.....#.#  
  ###.#####.#.#.###.#######.###.#####    L       Y         M G   D       U           D       A    #.#######.#####.###.#.#.#.#####.#.#  
  #.#.#.#.....#.#...#...#.....#.#...#                                                             #.......#...#.....#.#...#...#......XA
  #.#.#.###.###.###.#.#####.###.###.#                                                             #.###.#.#.#.#.###.#.#.#.#.#.#.#.#.#  
  #.............#.....#.......#.....#                                                           WC..#...#.#.#.#...#.....#...#...#.#.#  
  #.#.###.###.###.###.###.###.#.###.#                                                             ###.#.###.#####.#######.###.###.#.#  
RD..#...#.#.......#.....#...#...#.#.#                                                             #...#.#...#...#.#...#...#...#...#.#  
  #.#########.###.###.#.###.#.#.#.#.#                                                             ###.###.#.#.#.#.#.#########.#####.#  
  #...#.....#...#...#.#.....#.#.#...#                                                             #.......#...#.....#.....#.....#...#  
  #.#####.#######.#.###.###.#.#.#.###                                                             #.#############.###.#############.#  
  #.#...#.#.....#.#.#.#.#.#.#.#.#....UZ                                                           #.#.........#.#.#.#.#.#.#.....#.#.#  
  #####.#.#.#######.#.###.#.#.#####.#                                                             ###.#######.#.#.#.#.#.#.#.#.###.###  
  #.....#.....#...#.#.#...#.#...#...#                                                           TR..#.#...#.....#...#...#.#.#.#.#...#  
  #.###.#.#######.#.#.###.###.#######                                                             #.#.#.#.#.#.#.###.#.###.###.#.###.#  
ZM....#.......#.#.#.#.#.....#.#.#...#                                                             #.#.#.#...#.#...#.#................EL
  ###.###.#####.#.###.###.#.###.###.#                                                             #.#.#.#############.#########.#.#.#  
  #...#.#...#.......#.....#.........#                                                             #...#...............#.......#.#.#.#  
  ###.#.#.#####.###.#.###.#.#######.#                                                             #.#.#######################.#######  
  #.#.#.#.......#.......#.#.....#....UH                                                           #.#.#.........#.....#.#...#...#.#..AU
  #.###.#############################                                                             #######.###.#####.###.#.###.#.#.#.#  
  #.......#.............#...........#                                                           TZ..........#.................#......ZZ
  #.#####.#.#.#.#.###.#####.#.#.###.#                                                             ###################.#.#####.#.#####  
  #.....#...#.#.#.#.#...#.#.#.#...#..WT                                                         ET..#.#.......#.#...#.#.....#.#.#...#  
  #####.###.#.#######.###.#.#.#####.#                                                             #.#.#.###.###.#.###############.###  
  #.....#...#...#.....#.....#...#...#                                                             #.#...#.........#.#.#.....#.#......TZ
  #.#.#.#.#.#######.###.###.#########                                                             #.#.###.#.###.###.#.#.#.#.#.#.#.###  
TR..#.#.#.#...#.........#.....#.....#                                                             #.#.#...#...#.#.#.....#.#.#...#.#.#  
  #############.###.###########.#####                                                             #.#.#.#########.#####.#.#####.###.#  
  #...#...#...#.#...#...........#.#.#                                                             #...#.................#...........#  
  #.#.#.#.###.###.#####.#.###.###.#.#                                                             #.#################################  
WT..#...#.....#...#.#...#.#...#.#...#                                                             #.#.......#...#...#...............#  
  #.###.#.###.#####.###.###.###.###.#                                                             ###.###.###.#.###.#.#.#.#.#####.#.#  
  #.#...#.#.....#...#...#.#.......#.#                                                           QS..#.#.#.....#.......#.#.#.#.....#.#  
  #####.#.###.#####.#.#.#.#######.#.#                                                             #.#.#.#####.###.#.#.#########.###.#  
  #...#.#.#...........#.#.#.#.#......WE                                                           #.#.......#.#.#.#.#.#.......#.#.#..JG
  #.#######.###.#.#######.#.#.#######                                                             #.#######.###.#####.#####.#####.#.#  
  #.....#...#...#.#.#.......#.......#                                                             #.............#.#.#.#.#...#...#...#  
  #.#.#.#######.#.#.###.###.###.###.#                                                             ###.###########.#.###.###.###.#####  
UZ..#.#.#.#...#.#.#.#...#...#...#...#                                                           XR..#.#...........#.#.#.#...........#  
  ###.###.#.#.#.###.###.#.###.#.###.#                                                             #.###.###.#####.#.#.#.###.#.###.###  
  #.....#...#.#.#.....#.#...#.#.#.#..AQ                                                           #.#...#.....#.............#.#......WC
  ###.###.#.#####.###.#.###.###.#.###                                                             #.###.###.#######.#.#.#.###.#.###.#  
  #.#.....#.........#...#.........#.#                                                             #.#.#.#.#.#.......#.#.#...#.#.#.#.#  
  #.#########.###.#####.###.###.###.#                                                             #.#.#.#.#######################.###  
  #.......#.....#.....#...#.#.#...#..LS                                                           #.......#.#.......#.....#...#.#.#.#  
  #.###.#################.#.#.#####.#                                                             #######.#.#.#######.#####.###.#.#.#  
  #.#.......#.#...#.#.#...#.#.......#                                                             #.#.#.#.#...#.........#.........#.#  
  #.#.#######.###.#.#.#######.###.#.#                                                             #.#.#.###.#.#.#######.#.#.#.###.#.#  
SY..#.....#.#.....#...#.#...#.#.#.#.#                                                           ER..........#.#.#.#.#.....#.#.#...#..XR
  ###.#.###.#.###.###.#.#.#####.###.#                                                             #.#####.###.#.#.#.#.###.#######.#.#  
  #...#.......#.....................#                                                             #.#.#...#...#.....#.#.#.#.#.....#.#  
  #######.###.#######.#.#.###.#.#.#.#                                                             #.#.#######.###.#.###.#.#.#####.#.#  
  #.........#.....#...#.#.#.#.#.#.#.#                                                             #.....#.#.......#.#...........#...#  
  #.#####.#.#######.#.#.#.#.#####.#.#        L         E         I       K       N     A          #.#####.###.#.###.#.#####.#######.#  
  #...#.#.#...#.#...#.#.#.....#.#.#.#        Z         M         F       F       T     V          #...#.......#...#.#...#.......#...#  
  #####.#.###.#.###.#.#.#.#.#.#.#############.#########.#########.#######.#######.#####.#################.#.###.#.#####.#.###.#####.#  
  #.......#.......#.#.#.#.#.#.....#...#...........#.#...#.#.......#.#.#.........#...#.......#...#.#.....#.#.#.#.#.....#.#.#.....#...#  
  #.###.#.#.#.#####.###.###.#.#.#.###.#.#####.#.###.#.#.#.###.#####.#.#####.#.#####.#######.#.###.###.#######.#.#.#######.#####.#.#.#  
  #.#...#.#.#.....#.#.....#.#.#.#...#...#.#...#.....#.#.#.....#.....#.......#.#.#.#.#.....#...#.....#.#.#.......#.#.#.........#.#.#.#  
  #####.#.###.###.#.###.###.#.#.#########.#.#.#.###.#.#######.#.#.#.#.#.#.#.###.#.#.###.#.#.#####.###.#.#####.###.#.#####.#####.###.#  
  #...#.#.#.....#.#.#.....#.#.#.#.#.....#...#.#.#...#...#...#.#.#.#.#.#.#.#.#.#.#...#...#.................#...#.........#.#.......#.#  
  #.#.#.#.###.#####.#.#.#.###.#.#.#.#.#########.###.#.#####.#.#.#.#######.###.#.#.###.#####.#####.#.#.###.###.#.#####.#######.#.###.#  
  #.#...#.#.....#...#.#.#...#.#...#.#.....#.....#...#.#.#.......#...#.#.#...#.......#.#.#.#...#.#.#.#.#.....#.#.....#...#.....#...#.#  
  #.###.#.#.#.#.###.###.#######.#######.#.#.###.###.#.#.###########.#.#.#.###.#######.#.#.#####.###########.#####.###.#########.###.#  
  #.#...#.#.#.#...#.#.....#.....#.#.....#.#...#.#...#.#.....#.......#.......#...#.................#...#.....#.......#.#.#.#.#.....#.#  
  #####.###.#.###.#####.#.###.#.#.#######.#########.#.#.###.###.#####.#######.#.###.#.###.###.###.#.###########.#.#.###.#.#.#.#####.#  
  #.....#.#.#.#.#.#.#...#.#.#.#.#.#.#.........#.#.#.#.#.#.#.#.......#.#.....#.#.#...#.#...#.....#.#...#...#.#...#.#.........#...#...#  
  #.###.#.#####.#.#.#.#.#.#.#####.#.#####.###.#.#.#.#.#.#.#.#####.#.#.#.#.###.###.###.###.#########.#.#.###.###.###.#####.###.###.###  
  #.#.......#.......#.#.#.#...#...........#.........#.....#.#.#.#.#.#.#.#.#.#...#...#.#...........#.#.#.......#.#.#.....#...#.#...#.#  
  #####.#.#####.###.###.###.#####.#.#.#.#.#######.#########.#.#.###.#.#.#.#.#.#.###.#.#####.#####.#.#####.#.#####.#.#####.#.#####.#.#  
  #.....#.#...#...#.#...#.....#...#.#.#.#...#.#.....#.............#.#...#...#.#.#.#.#.....#.....#.........#...#.........#.#.....#...#  
  #.#.#.#.###.#####.#########.#####.#########.#####.#.###.#####.###.###.#.###.###.#########.###.#.#######.###.###.###.#.#.#.###.#.#.#  
  #.#.#.#.#...............#.......#...#...#...#.#...#.#.#...#...#.....#.#...#.#.........#.....#.#.....#...#.....#...#.#.#.#.#.#.#.#.#  
  #.#.###.#.#.###.#.###.#.#####.#######.#####.#.###.#.#.###.#######.#######.#.#####.#.###.#.#####.###.#######.#.#.#.#.#.#####.###.###  
  #.#.#.#.#.#...#.#.#...#.#.........#.....#...#.....#.....#.#...#...#.#.#...#.#.#...#.#.#.#.....#...#.#...#...#.#.#.#.#.........#...#  
  #.###.#.###.#.###.###.###.###.###.#####.###.#.#######.#######.#.###.#.###.#.#.###.###.###.#####.#######.###.###.###.###.#.#.###.#.#  
  #.#.......#.#.#.....#...#.#.#.#...#.#...#.........#...#.#.#...#.....#.#...#...........#.......#.#.........#.#.#.#.....#.#.#.#...#.#  
  #.###.###.#.###.#.#########.#####.#.#.#####.###.###.###.#.###.###.###.###.#.#####.#.#.#.###.###.###.#.###.###.#######.#.###.###.###  
  #.#...#...#.#...#...#.#...#.................#.#.#.......#.......#...#.....#.#.#.#.#.#.#.#.#.#.......#.#.#...#.#...#...#.#...#.....#  
  #.#.#.#.#.###.###.###.###.#######.###.#.#.#.#.#.#####.#####.###.#.#######.#.#.#.#.#####.#.#.###.#.#####.#####.#.#######.#.#####.###  
  #.#.#.#.#.#.....#...#...#.#.......#...#.#.#...#.#.#...#.#...#.#...#...#...#.#.........#...#...#.#...#...#.#.....#...#...#...#.....#  
  #####.#######.###.###.###.#.#.#######.#######.###.#.#.#.###.#######.#.#.#####.#.#.#######.#######.#####.#.###.#####.#############.#  
  #.....#.......#.#.#.........#.#.#.....#...#.......#.#.#.#.#.#...#...#.#.....#.#.#.#.#...#.#.#.#...#...#.#.........#.....#.#...#.#.#  
  ###.#######.#.#.#####.#########.###.#.###.###.###.#.###.#.#.#.#.#.#.#.###.#####.###.###.#.#.#.#######.#.#.#.#.#.###.#####.#.###.###  
  #.....#...#.#.#...........#.........#.#.......#...#.#.....#...#.#.#.#...#.#.......#.#.#.....#.#...#.......#.#.#.#.#...............#  
  #.#####.#######.#.###.#.#####.###.###.#####.###.###.#.#####.#######.###.#.#.#######.#.#.###.#.###.#.#############.#.#.###.#######.#  
  #...#...........#...#.#...#...#.#.#.#.#.#.#.#.....#...#.#.#.....#.....#...#.....#.#.......#.....#...#...#...#...#...#...#...#.....#  
  #.#.#.#####.#####.###.#.###.###.###.#.#.#.#####.#####.#.#.#.#########.#####.#.#.#.#.#.#.#####.###.###.###.###.#####.###.###.###.###  
  #.#.#...#.....#...#...#.#.....#.......#.........#.......#.......#.........#.#.#...#.#.#.....#.......................#.....#.#.....#  
  ###############################################.#######.#####.#########.#######.#.#.###############################################  
                                                 A       L     N         E       A E E                                                 
                                                 Q       S     T         R       A M T                                                 
"""


import math
import numpy as np
import itertools as it
import networkx as nx
from collections import defaultdict, deque


# 1
def get_portal_positions(board):
    portal_positions = defaultdict(lambda: [])
    for i, j in zip(*np.where(board == '.')):
        if board[i-1, j].isupper():
            p = board[i-2, j] + board[i-1, j]
        elif board[i+1, j].isupper():
            p = board[i+1, j] + board[i+2, j]
        elif board[i, j-1].isupper():
            p = board[i, j-2] + board[i, j-1]
        elif board[i, j+1].isupper():
            p = board[i, j+1] + board[i, j+2]
        else:
            continue
        portal_positions[p].append((i, j))
    return portal_positions


def build_graph(board, portal_positions):
    graph = nx.Graph()
    walkable_positions = set(zip(*np.where(board == '.')))
    queue = deque(walkable_positions)
    while queue:
        i1, j1 = queue.pop()
        for i2, j2 in [(i1, j1+1), (i1, j1-1), (i1+1, j1), (i1-1, j1)]:
            if (i2, j2) in walkable_positions:
                graph.add_edge((i1, j1), (i2, j2))
    for k, v in portal_positions.items():
        if k not in {'AA', 'ZZ'}:
            graph.add_edge(v[0], v[1])
    return graph


board = np.array([list(x) for x in text.splitlines()[1:]])
portal_positions = get_portal_positions(board)
graph = build_graph(board, portal_positions)
print(nx.shortest_path_length(graph, portal_positions['AA'][0], portal_positions['ZZ'][0]))


# 2
class Solver:
    def __init__(self, text):
        self.board = np.array([list(x) for x in text.splitlines()[1:]])
        self.portals = self.get_portals()
        self.reverse_portals = {v: k for k, v in self.portals.items()}
        self.graph = self.build_graph()
        self.distances = self.get_distances_of_possible_paths()
        
    def get_portals(self):
        portals = dict()
        for i, j in zip(*np.where(self.board == '.')):
            if self.board[i-1, j].isupper():
                p = self.board[i-2, j] + self.board[i-1, j]
            elif self.board[i+1, j].isupper():
                p = self.board[i+1, j] + self.board[i+2, j]
            elif self.board[i, j-1].isupper():
                p = self.board[i, j-2] + self.board[i, j-1]
            elif self.board[i, j+1].isupper():
                p = self.board[i, j+1] + self.board[i, j+2]
            else:
                continue
            if i == 2 or j == 2 or i == self.board.shape[0]-3 or j == self.board.shape[1]-3:
                ptype = 'o'
            else:
                ptype = 'i'
            portals[(p, ptype)] = (i, j)
        return portals
        
    def build_graph(self):
        graph = nx.Graph()
        walkable_positions = set(zip(*np.where(self.board == '.')))
        queue = deque(walkable_positions)
        while queue:
            i1, j1 = queue.pop()
            k1 = self.reverse_portals.get((i1, j1), (i1, j1))
            for i2, j2 in [(i1, j1+1), (i1, j1-1), (i1+1, j1), (i1-1, j1)]:
                if (i2, j2) in walkable_positions:
                    k2 = self.reverse_portals.get((i2, j2), (i2, j2))
                    graph.add_edge(k1, k2)
        return graph
    
    def get_distances_of_possible_paths(self):
        distances = defaultdict(lambda: dict())
        for cc in nx.connected_components(self.graph):
            for k1, k2 in it.combinations(cc & self.portals.keys(), 2):
                d = nx.shortest_path_length(self.graph, k1, k2)
                distances[k1][k2], distances[k2][k1] = d, d
        return distances
    
    def get_accessible_portals(self, start, level):
        accessible = self.distances[start].keys()
        if level == 0:
            accessible = [p for p in accessible if p[0] == 'ZZ' or p[1] == 'i']
        else:
            accessible = accessible - {('AA', 'o'), ('ZZ', 'o')}
        return sorted(accessible, reverse=True)
    
    def symmetric_portal(self, portal):
        p, t = portal
        return (p, 'o') if t == 'i' else (p, 'i')
    
    def new_level(self, portal, level):
        return level+1 if portal[1] == 'i' else level-1
    
    def get_min_distance(self, start, level, seen, max_repetition):
        if start in seen:
            if level >= seen[start] + max_repetition:
                return math.inf
        elif level > 0:
            seen = seen.copy()
            seen[start] = level
        accessible_portals = self.get_accessible_portals(start, level)
        min_distance = math.inf
        for dest in accessible_portals:
            distance = self.distances[start][dest]
            if dest != ('ZZ', 'o'):
                new_start, new_level = self.symmetric_portal(dest), self.new_level(dest, level)
                distance += 1 + self.get_min_distance(new_start, new_level, seen, max_repetition)
            min_distance = min(min_distance, distance)
        return min_distance

    
solver = Solver(text)
result, max_repetition = math.inf, 0
while result == math.inf:
    result = solver.get_min_distance(start=('AA', 'o'), level=0, seen=dict(), max_repetition=max_repetition)
    max_repetition += 1
print(result)
